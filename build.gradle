plugins {
    id 'java'
    id 'maven-publish'
}

group = 'fr.efreicraft'
version = '1.0.12'

compileJava.options.encoding "UTF-8"

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    if (System.getenv("NEXUS_REPOSITORY")) {
        println "Using Nexus repository"
        maven {
            name = 'nexus'
            url = uri(System.getenv("NEXUS_REPOSITORY"))
            credentials {
                username = System.getenv("NEXUS_USERNAME")
                password = System.getenv("NEXUS_PASSWORD")
            }
        }
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT'
    compileOnly 'net.luckperms:api:5.4'
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.8'
}

jar {
    manifest {
        attributes "Main-Class": "fr.efreicraft.ecatup.Main"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

configurations {
    jar.archiveName = rootProject.name + ".jar"
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

task move(type: Copy) {
    from "build/libs/" + rootProject.name + "-" + version + ".jar"
    into "SERVER_TEST/plugins/"
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = rootProject.group
            artifactId = rootProject.name
            version = rootProject.version

            from components.java

            pom.packaging = 'jar'

            artifact("${buildDir}/libs/${rootProject.name}.jar") {
                classifier = 'jar'
            }
        }
    }
    repositories {
        if (System.getenv("NEXUS_REPOSITORY")) {
            maven {
                url = uri(System.getenv("NEXUS_REPOSITORY"))
                credentials {
                    username = System.getenv("NEXUS_USERNAME")
                    password = System.getenv("NEXUS_PASSWORD")
                }
            }
        } else {
            mavenLocal()
        }
    }
}